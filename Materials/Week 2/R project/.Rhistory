rm(list=ls())
library(here)
library(purrr)
library(readxl)
library(Hmisc)
library(Hmisc)
#Check to see how many directories are in the Raw Data folder
#Should populate 13 sub folders.
dir(here("Raw Data"))
#Let's read in one file to see how ugly the data are
files.test=list.files(here("Raw Data","Sub1"))
temp=read_excel(here("Raw Data","Sub1",files.test[1]))
#very ugly need to modify so we only import a certain range
#Let's just do the first 5 rows where the data is in long format
temp=read_excel(here("Raw Data","Sub1",files.test[1]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
library(chron)
times(temp$t)
apply(temp[,c(2:5)],2,as.numeric)
i=1
j=1
temp=read_excel(here(dir.list[i],files.import[j]),range = cell_cols("J:O"))
dir.list=dir(here("Raw Data"))
files.import=list.files(here("Raw Data",dir.list[i]))
temp=read_excel(here(dir.list[i],files.import[j]),range = cell_cols("J:O"))
here(dir.list[i],files.import[j])
dir.list[1]
dir.list=dir(here("Raw Data"))
dir.list[1]
here
here()
temp=read_excel(here("Raw Data",dir.list[i],files.import[j]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
temp[,c(2,5)]=apply(temp[,c(2:5)],2,as.numeric)
apply(temp[,c(2:5)],2,as.numeric)
temp[,c(2,5)]=apply(temp[,c(2:5)],2,as.numeric)
gsub(files.import[j])
gsub("rest",files.import[j])
apply(temp[,c(2:5)],2,as.numeric)
temp[,c(2,5)]
temp=read_excel(here("Raw Data",dir.list[i],files.import[j]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
temp[,c(2,5)]=apply(temp[,c(2:5)],2,as.numeric)
temp[,c(2:5)]=apply(temp[,c(2:5)],2,as.numeric)
temp$t=times(temp$t)
files.import[j]
nchar(files.import)
substr(files.import[2],nchar(files.import[2])-6,nchar(files.import[2])-5)
substr(files.import[2],nchar(files.import[2])-5,nchar(files.import[2])-5)
data.all=data.frame(t=numeric(),
Rf=numeric(),
VT=numeric(),
VE=numeric(),
VO2=numeric(),
Sub=character(),
trial=numeric())
dir.list=dir(here("Raw Data"))
for(i in 1:length(dir.list)){
files.import=list.files(here("Raw Data",dir.list[i]))
for(j in 1:length(files.import)){
temp=read_excel(here("Raw Data",dir.list[i],files.import[j]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
temp[,c(2:5)]=apply(temp[,c(2:5)],2,as.numeric)
temp$t=times(temp$t)
temp$Sub=dir.list[i]
if(nchar(files.import[j]<16)){
temp$trial=0
}else{
temp$trial=as.numeric(substr(files.import[j],nchar(files.import[j])-5,nchar(files.import[j])-5))
}
data.all=rbind(data.all,temp)
}
}
i
j
here("Raw Data",dir.list[i],files.import[j])
dir.list
dir.list[i]
files.import[j]
list.files(here("Raw Data",dir.list[i]))
source("C:/Users/ahooyman/ASU Dropbox/Andrew Hooyman/ReproRehab/2024/Import_week2/Import Script.R")
dim(data.all)
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
as.numeric(times(temp$t))
times(temp$t)
seconds(times(temp$t))
nchar(files.import[j])<16
source("C:/Users/ahooyman/ASU Dropbox/Andrew Hooyman/ReproRehab/2024/Import_week2/Import Script.R")
minutes(times(temp$t))
times(temp$t)
temp$t
temp=read_excel(here("Raw Data",dir.list[i],files.import[j]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
temp[,c(2:5)]=apply(temp[,c(2:5)],2,as.numeric)
times(temp$t)
minutes(temp$t)
minutes(times(temp$t))
(minutes(times(temp$t))*60)
seconds(times(temp$t))+(minutes(times(temp$t))*60)
files.import[j]
source("C:/Users/ahooyman/ASU Dropbox/Andrew Hooyman/ReproRehab/2024/Import_week2/Import Script.R")
if(nchar(files.import[j])<16){
temp$trial=0
}else{
temp$trial=as.numeric(substr(files.import[j],nchar(files.import[j])-5,nchar(files.import[j])-5))
}
temp$trial
View(data.all)
ggplot(data.all,aes(x=t,y=VO2,color=as.facotr(trial)))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_point()+
geom_line()
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_smooth(method = 'lm')
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_smooth(method = 'lm',formula = 'y~log(x)')
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_smooth(method = 'lm')
#Check to see how many directories are in the Raw Data folder
#Should populate 13 sub folders.
dir(here("Raw Data"))
table(data.all$trial)
source("C:/Users/ahooyman/ASU Dropbox/Andrew Hooyman/ReproRehab/2024/Import_week2/Import Script.R")
dim(data.all)
ggplot(data.all,aes(x=t,y=VO2,color=as.factor(trial)))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth(method = 'lm')
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()+
facet_wrap(~Sub)
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()
#Visualize each trial across all participants
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()
?scale_color_discrete()
brewer.pal(8, "Spectral")
olorRampPalette(c("black", "white"))
colorRampPalette(c("black", "white"))
colfunc <- colorRampPalette(c("black", "white"))
colfunc(7)
colfunc <- colorRampPalette(c("orange", "purple"))
#Visualize each trial across all participants
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()+
scale_colour_manual(values = c(colfunc(7)))
data.all=data.frame(t=numeric(),
Rf=numeric(),
VT=numeric(),
VE=numeric(),
VO2=numeric(),
Sub=character(),
trial=character())
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()
rm(list=ls())
library(here)
library(purrr)
library(readxl)
library(Hmisc)
library(chron)
library(ggplot2)
#Check to see how many directories are in the Raw Data folder
#Should populate 13 sub folders.
dir(here("Raw Data"))
#Let's read in one file to see how ugly the data are
files.test=list.files(here("Raw Data","Sub1"))
temp=read_excel(here("Raw Data","Sub1",files.test[1]))
#very ugly need to modify so we only import a certain range
#Let's just do the first 5 rows where the data is in long format
temp=read_excel(here("Raw Data","Sub1",files.test[1]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
#Create empty data frame which we will iteratively build
data.all=data.frame(t=numeric(),
Rf=numeric(),
VT=numeric(),
VE=numeric(),
VO2=numeric(),
Sub=character(),
trial=character())
dir.list=dir(here("Raw Data"))
for(i in 1:length(dir.list)){
files.import=list.files(here("Raw Data",dir.list[i]))
for(j in 1:length(files.import)){
#Give me only the rows I need
temp=read_excel(here("Raw Data",dir.list[i],files.import[j]),range = cell_cols("J:O"))
#Remove the random stuff
temp=temp[-c(1,2),-2]
#Convert to numeric
temp[,c(2:5)]=apply(temp[,c(2:5)],2,as.numeric)
#Covert to seconds
temp$t=seconds(times(temp$t))+(minutes(times(temp$t))*60)
#Assign Sub id
temp$Sub=dir.list[i]
#Assign trial id
if(nchar(files.import[j])<16){
temp$trial="rest"
}else{
temp$trial=paste("trial",as.numeric(substr(files.import[j],nchar(files.import[j])-5,nchar(files.import[j])-5)))
}
data.all=rbind(data.all,temp)
}
}
dim(data.all)
#Visualize raw data by subject
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_point()+
geom_line()+
facet_wrap(~Sub)
#Visualize data using loess by subject
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()+
facet_wrap(~Sub)
#create a color gradient
colfunc <- colorRampPalette(c("orange", "purple"))
#Visualize each trial across all participants
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()+
scale_colour_manual(values = c(colfunc(7)))
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()
rm(list=ls())
#Visualize each trial across all participants
ggplot(data.all,aes(x=t,y=VO2,color=trial))+
geom_smooth()+
scale_colour_manual(values = c(colfunc(7)))
ReqdLibs = c("here","purrr","readxl","Hmisc","chron","ggplot2")
lapply(ReqdLibs, library, character.only = TRUE)
dir(here("Raw Data"))
files.test=list.files(here("Raw Data","Sub1"))
temp0=read_excel(here("Raw Data","Sub1",files.test[1]))
View(temp0)
temp=read_excel(here("Raw Data","Sub1",files.test[1]),range = cell_cols("J:O"))
temp=temp[-c(1,2),-2]
View(temp)
#Create empty data frame which we will iteratively build
data.all=data.frame(t=numeric(),
Rf=numeric(),
VT=numeric(),
VE=numeric(),
VO2=numeric(),
Sub=character(),
trial=character())
View(data.all)
View(data.all)
dir.list=dir(here("Raw Data"))
for(i in 1:length(dir.list))
